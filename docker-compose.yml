version: '3.8'

services:
  mongo:
    image: mongo
    container_name: hospital-mongo-db-container
    restart: no
    ports:
      - "${MONGO_PORT}:${MONGO_PORT}"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongo_data:/data/db

  mongo-express:
    image: mongo-express
    container_name: hospital-mongo-express-container
    restart: no
    ports:
      - "6001:6001"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:${MONGO_PORT}/
      ME_CONFIG_BASICAUTH: false
    depends_on:
      - mongo

  postgres:
    image: postgres:17.2-alpine
    container_name: hospital-postgres-container
    restart: no
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin_password
      POSTGRES_DB: user_db
    volumes:
      - postgres_data:/var/lib/postgresql/data

  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: hospital-zookeeper-container
    restart: no
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "${ZOOKEEPER_PORT}:${ZOOKEEPER_PORT}"

  kafka:
    image: bitnami/kafka:3.8
    container_name: hospital-kafka-container
    restart: no
    depends_on:
      - zookeeper
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:${ZOOKEEPER_PORT}
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:${KAFKA_PORT}
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:${KAFKA_PORT}
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - "${KAFKA_PORT}:${KAFKA_PORT}"
    volumes:
      - ./kafka-data:/bitnami/kafka/data

  maildev:
    image: maildev/maildev:latest
    container_name: hospital-maildev-container
    restart: no
    ports:
      - "${MAILDEV_WEB_PORT}:${MAILDEV_WEB_PORT}" # Web UI
      - "${MAILDEV_SMTP_PORT}:${MAILDEV_SMTP_PORT}" # SMTP

  zipkin:
    image: openzipkin/zipkin
    container_name: hospital-zipkin-container
    restart: no
    ports:
      - "9411:9411"

  eureka-server:
    build:
       context: .
       dockerfile: ./eureka-server/Dockerfile
    ports:
       - "8761:8761"

volumes:
  mongo_data:
  postgres_data:
  kafka_data:
